import unittest
from meu_grafo_lista_adj import *
from bibgrafo.grafo_errors import *
from bibgrafo.aresta import Aresta


class TestGrafo(unittest.TestCase):

    def setUp(self):
        # Grafo da Paraíba
        self.g_p = MeuGrafo()
        self.g_p.adiciona_vertice("J")
        self.g_p.adiciona_vertice("C")
        self.g_p.adiciona_vertice("E")
        self.g_p.adiciona_vertice("P")
        self.g_p.adiciona_vertice("M")
        self.g_p.adiciona_vertice("T")
        self.g_p.adiciona_vertice("Z")
        self.g_p.adiciona_aresta('a1', 'J', 'C')
        self.g_p.adiciona_aresta('a2', 'C', 'E')
        self.g_p.adiciona_aresta('a3', 'C', 'E')
        self.g_p.adiciona_aresta('a4', 'P', 'C')
        self.g_p.adiciona_aresta('a5', 'P', 'C')
        self.g_p.adiciona_aresta('a6', 'T', 'C')
        self.g_p.adiciona_aresta('a7', 'M', 'C')
        self.g_p.adiciona_aresta('a8', 'M', 'T')
        self.g_p.adiciona_aresta('a9', 'T', 'Z')

        # Clone do Grafo da Paraíba para ver se o método equals está funcionando
        self.g_p2 = MeuGrafo()
        self.g_p2.adiciona_vertice("J")
        self.g_p2.adiciona_vertice("C")
        self.g_p2.adiciona_vertice("E")
        self.g_p2.adiciona_vertice("P")
        self.g_p2.adiciona_vertice("M")
        self.g_p2.adiciona_vertice("T")
        self.g_p2.adiciona_vertice("Z")
        self.g_p2.adiciona_aresta('a1', 'J', 'C')
        self.g_p2.adiciona_aresta('a2', 'C', 'E')
        self.g_p2.adiciona_aresta('a3', 'C', 'E')
        self.g_p2.adiciona_aresta('a4', 'P', 'C')
        self.g_p2.adiciona_aresta('a5', 'P', 'C')
        self.g_p2.adiciona_aresta('a6', 'T', 'C')
        self.g_p2.adiciona_aresta('a7', 'M', 'C')
        self.g_p2.adiciona_aresta('a8', 'M', 'T')
        self.g_p2.adiciona_aresta('a9', 'T', 'Z')

        # Outro clone do Grafo da Paraíba para ver se o método equals está funcionando
        # Esse tem um pequena diferença na primeira aresta
        self.g_p3 = MeuGrafo()
        self.g_p3.adiciona_vertice("J")
        self.g_p3.adiciona_vertice("C")
        self.g_p3.adiciona_vertice("E")
        self.g_p3.adiciona_vertice("P")
        self.g_p3.adiciona_vertice("M")
        self.g_p3.adiciona_vertice("T")
        self.g_p3.adiciona_vertice("Z")
        self.g_p3.adiciona_aresta('a', 'J', 'C')
        self.g_p3.adiciona_aresta('a2', 'C', 'E')
        self.g_p3.adiciona_aresta('a3', 'C', 'E')
        self.g_p3.adiciona_aresta('a4', 'P', 'C')
        self.g_p3.adiciona_aresta('a5', 'P', 'C')
        self.g_p3.adiciona_aresta('a6', 'T', 'C')
        self.g_p3.adiciona_aresta('a7', 'M', 'C')
        self.g_p3.adiciona_aresta('a8', 'M', 'T')
        self.g_p3.adiciona_aresta('a9', 'T', 'Z')

        # Outro clone do Grafo da Paraíba para ver se o método equals está funcionando
        # Esse tem um pequena diferença na segunda aresta
        self.g_p4 = MeuGrafo()
        self.g_p4.adiciona_vertice("J")
        self.g_p4.adiciona_vertice("C")
        self.g_p4.adiciona_vertice("E")
        self.g_p4.adiciona_vertice("P")
        self.g_p4.adiciona_vertice("M")
        self.g_p4.adiciona_vertice("T")
        self.g_p4.adiciona_vertice("Z")
        self.g_p4.adiciona_aresta('a1', 'J', 'C')
        self.g_p4.adiciona_aresta('a2', 'J', 'E')
        self.g_p4.adiciona_aresta('a3', 'C', 'E')
        self.g_p4.adiciona_aresta('a4', 'P', 'C')
        self.g_p4.adiciona_aresta('a5', 'P', 'C')
        self.g_p4.adiciona_aresta('a6', 'T', 'C')
        self.g_p4.adiciona_aresta('a7', 'M', 'C')
        self.g_p4.adiciona_aresta('a8', 'M', 'T')
        self.g_p4.adiciona_aresta('a9', 'T', 'Z')

        # Grafo da Paraíba sem arestas paralelas
        self.g_p_sem_paralelas = MeuGrafo()
        self.g_p_sem_paralelas.adiciona_vertice("J")
        self.g_p_sem_paralelas.adiciona_vertice("C")
        self.g_p_sem_paralelas.adiciona_vertice("E")
        self.g_p_sem_paralelas.adiciona_vertice("P")
        self.g_p_sem_paralelas.adiciona_vertice("M")
        self.g_p_sem_paralelas.adiciona_vertice("T")
        self.g_p_sem_paralelas.adiciona_vertice("Z")
        self.g_p_sem_paralelas.adiciona_aresta('a1', 'J', 'C')
        self.g_p_sem_paralelas.adiciona_aresta('a2', 'C', 'E')
        self.g_p_sem_paralelas.adiciona_aresta('a3', 'P', 'C')
        self.g_p_sem_paralelas.adiciona_aresta('a4', 'T', 'C')
        self.g_p_sem_paralelas.adiciona_aresta('a5', 'M', 'C')
        self.g_p_sem_paralelas.adiciona_aresta('a6', 'M', 'T')
        self.g_p_sem_paralelas.adiciona_aresta('a7', 'T', 'Z')

        # Grafos completos
        self.g_c = MeuGrafo()
        self.g_c.adiciona_vertice("J")
        self.g_c.adiciona_vertice("C")
        self.g_c.adiciona_vertice("E")
        self.g_c.adiciona_vertice("P")
        self.g_c.adiciona_aresta('a1', 'J', 'C')
        self.g_c.adiciona_aresta('a2', 'J', 'E')
        self.g_c.adiciona_aresta('a3', 'J', 'P')
        self.g_c.adiciona_aresta('a4', 'E', 'C')
        self.g_c.adiciona_aresta('a5', 'P', 'C')
        self.g_c.adiciona_aresta('a6', 'P', 'E')

        self.g_c2 = MeuGrafo()
        self.g_c2.adiciona_vertice("Nina")
        self.g_c2.adiciona_vertice("Maria")
        self.g_c2.adiciona_aresta('amiga', 'Nina', 'Maria')

        self.g_c3 = MeuGrafo()
        self.g_c3.adiciona_vertice("Único")

        # Grafos com laco
        self.g_l1 = MeuGrafo()
        self.g_l1.adiciona_vertice("A")
        self.g_l1.adiciona_vertice("B")
        self.g_l1.adiciona_vertice("C")
        self.g_l1.adiciona_vertice("D")
        self.g_l1.adiciona_aresta('a1', 'A', 'A')
        self.g_l1.adiciona_aresta('a2', 'A', 'B')
        self.g_l1.adiciona_aresta('a3', 'A', 'A')

        self.g_l2 = MeuGrafo()
        self.g_l2.adiciona_vertice("A")
        self.g_l2.adiciona_vertice("B")
        self.g_l2.adiciona_vertice("C")
        self.g_l2.adiciona_vertice("D")
        self.g_l2.adiciona_aresta('a1', 'A', 'B')
        self.g_l2.adiciona_aresta('a2', 'B', 'B')
        self.g_l2.adiciona_aresta('a3', 'B', 'A')

        self.g_l3 = MeuGrafo()
        self.g_l3.adiciona_vertice("A")
        self.g_l3.adiciona_vertice("B")
        self.g_l3.adiciona_vertice("C")
        self.g_l3.adiciona_vertice("D")
        self.g_l3.adiciona_aresta('a1', 'C', 'A')
        self.g_l3.adiciona_aresta('a2', 'C', 'C')
        self.g_l3.adiciona_aresta('a3', 'D', 'D')
        self.g_l3.adiciona_aresta('a4', 'D', 'D')

        self.g_l4 = MeuGrafo()
        self.g_l4.adiciona_vertice("D")
        self.g_l4.adiciona_aresta('a1', 'D', 'D')

        self.g_l5 = MeuGrafo()
        self.g_l5.adiciona_vertice("C")
        self.g_l5.adiciona_vertice("D")
        self.g_l5.adiciona_aresta('a1', 'D', 'C')
        self.g_l5.adiciona_aresta('a2', 'C', 'C')

        # Grafos desconexos
        self.g_d = MeuGrafo()
        self.g_d.adiciona_vertice("A")
        self.g_d.adiciona_vertice("B")
        self.g_d.adiciona_vertice("C")
        self.g_d.adiciona_vertice("D")
        self.g_d.adiciona_aresta('asd', 'A', 'B')

        self.g_d2 = MeuGrafo()
        self.g_d2.adiciona_vertice("A")
        self.g_d2.adiciona_vertice("B")
        self.g_d2.adiciona_vertice("C")
        self.g_d2.adiciona_vertice("D")

        # Grafos criados para a atividade de DFS e BFS:

        # Grafo K3
        self.grafo_k3 = MeuGrafo()
        self.grafo_k3.adiciona_vertice("A")
        self.grafo_k3.adiciona_vertice("B")
        self.grafo_k3.adiciona_vertice("C")
        self.grafo_k3.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k3.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k3.adiciona_aresta('a3', 'C', 'A')

        # Arvores de K3
        self.grafo_k3_dfs = MeuGrafo()
        self.grafo_k3_dfs.adiciona_vertice("A")
        self.grafo_k3_dfs.adiciona_vertice("B")
        self.grafo_k3_dfs.adiciona_vertice("C")
        self.grafo_k3_dfs.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k3_dfs.adiciona_aresta('a2', 'B', 'C')

        self.grafo_k3_dfsb = MeuGrafo()
        self.grafo_k3_dfsb.adiciona_vertice("A")
        self.grafo_k3_dfsb.adiciona_vertice("B")
        self.grafo_k3_dfsb.adiciona_vertice("C")
        self.grafo_k3_dfsb.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k3_dfsb.adiciona_aresta('a3', 'C', 'A')

        self.grafo_k3_bfs = MeuGrafo()
        self.grafo_k3_bfs.adiciona_vertice("A")
        self.grafo_k3_bfs.adiciona_vertice("B")
        self.grafo_k3_bfs.adiciona_vertice("C")
        self.grafo_k3_bfs.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k3_bfs.adiciona_aresta('a3', 'C', 'A')

        self.grafo_k3_bfsb = MeuGrafo()
        self.grafo_k3_bfsb.adiciona_vertice("A")
        self.grafo_k3_bfsb.adiciona_vertice("B")
        self.grafo_k3_bfsb.adiciona_vertice("C")
        self.grafo_k3_bfsb.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k3_bfsb.adiciona_aresta('a2', 'B', 'C')

        self.grafo_k3_bfsc = MeuGrafo()
        self.grafo_k3_bfsc.adiciona_vertice("A")
        self.grafo_k3_bfsc.adiciona_vertice("B")
        self.grafo_k3_bfsc.adiciona_vertice("C")
        self.grafo_k3_bfsc.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k3_bfsc.adiciona_aresta('a3', 'C', 'A')

        # Grafo K4
        self.grafo_k4 = MeuGrafo()
        self.grafo_k4.adiciona_vertice("A")
        self.grafo_k4.adiciona_vertice("B")
        self.grafo_k4.adiciona_vertice("C")
        self.grafo_k4.adiciona_vertice("D")
        self.grafo_k4.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k4.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k4.adiciona_aresta('a3', 'C', 'D')
        self.grafo_k4.adiciona_aresta('a4', 'D', 'A')
        self.grafo_k4.adiciona_aresta('a5', 'A', 'C')
        self.grafo_k4.adiciona_aresta('a6', 'B', 'D')

        # Arvores de K4
        self.grafo_k4_dfs = MeuGrafo()
        self.grafo_k4_dfs.adiciona_vertice("A")
        self.grafo_k4_dfs.adiciona_vertice("B")
        self.grafo_k4_dfs.adiciona_vertice("C")
        self.grafo_k4_dfs.adiciona_vertice("D")
        self.grafo_k4_dfs.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k4_dfs.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k4_dfs.adiciona_aresta('a3', 'C', 'D')

        self.grafo_k4_dfsb = MeuGrafo()
        self.grafo_k4_dfsb.adiciona_vertice("A")
        self.grafo_k4_dfsb.adiciona_vertice("B")
        self.grafo_k4_dfsb.adiciona_vertice("C")
        self.grafo_k4_dfsb.adiciona_vertice("D")
        self.grafo_k4_dfsb.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k4_dfsb.adiciona_aresta('a3', 'C', 'D')
        self.grafo_k4_dfsb.adiciona_aresta('a4', 'D', 'A')

        self.grafo_k4_dfsc = MeuGrafo()
        self.grafo_k4_dfsc.adiciona_vertice("A")
        self.grafo_k4_dfsc.adiciona_vertice("B")
        self.grafo_k4_dfsc.adiciona_vertice("C")
        self.grafo_k4_dfsc.adiciona_vertice("D")
        self.grafo_k4_dfsc.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k4_dfsc.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k4_dfsc.adiciona_aresta('a4', 'D', 'A')

        self.grafo_k4_bfs = MeuGrafo()
        self.grafo_k4_bfs.adiciona_vertice("A")
        self.grafo_k4_bfs.adiciona_vertice("B")
        self.grafo_k4_bfs.adiciona_vertice("C")
        self.grafo_k4_bfs.adiciona_vertice("D")
        self.grafo_k4_bfs.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k4_bfs.adiciona_aresta('a4', 'D', 'A')
        self.grafo_k4_bfs.adiciona_aresta('a5', 'A', 'C')

        self.grafo_k4_bfsb = MeuGrafo()
        self.grafo_k4_bfsb.adiciona_vertice("A")
        self.grafo_k4_bfsb.adiciona_vertice("B")
        self.grafo_k4_bfsb.adiciona_vertice("C")
        self.grafo_k4_bfsb.adiciona_vertice("D")
        self.grafo_k4_bfsb.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k4_bfsb.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k4_bfsb.adiciona_aresta('a6', 'B', 'D')

        self.grafo_k4_bfsc = MeuGrafo()
        self.grafo_k4_bfsc.adiciona_vertice("A")
        self.grafo_k4_bfsc.adiciona_vertice("B")
        self.grafo_k4_bfsc.adiciona_vertice("C")
        self.grafo_k4_bfsc.adiciona_vertice("D")
        self.grafo_k4_bfsc.adiciona_aresta('a5', 'A', 'C')
        self.grafo_k4_bfsc.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k4_bfsc.adiciona_aresta('a3', 'C', 'D')

        self.grafo_k4_bfsd = MeuGrafo()
        self.grafo_k4_bfsd.adiciona_vertice("A")
        self.grafo_k4_bfsd.adiciona_vertice("B")
        self.grafo_k4_bfsd.adiciona_vertice("C")
        self.grafo_k4_bfsd.adiciona_vertice("D")
        self.grafo_k4_bfsd.adiciona_aresta('a3', 'C', 'D')
        self.grafo_k4_bfsd.adiciona_aresta('a4', 'D', 'A')
        self.grafo_k4_bfsd.adiciona_aresta('a6', 'B', 'D')

        # Grafo K5
        self.grafo_k5 = MeuGrafo()
        self.grafo_k5.adiciona_vertice("A")
        self.grafo_k5.adiciona_vertice("B")
        self.grafo_k5.adiciona_vertice("C")
        self.grafo_k5.adiciona_vertice("D")
        self.grafo_k5.adiciona_vertice("E")
        self.grafo_k5.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k5.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k5.adiciona_aresta('a3', 'C', 'D')
        self.grafo_k5.adiciona_aresta('a4', 'D', 'E')
        self.grafo_k5.adiciona_aresta('a5', 'E', 'A')
        self.grafo_k5.adiciona_aresta('a6', 'A', 'C')
        self.grafo_k5.adiciona_aresta('a7', 'A', 'D')
        self.grafo_k5.adiciona_aresta('a8', 'B', 'D')
        self.grafo_k5.adiciona_aresta('a9', 'B', 'E')
        self.grafo_k5.adiciona_aresta('a10', 'C', 'E')

        # Arvores de K5
        self.grafo_k5_dfs = MeuGrafo()
        self.grafo_k5_dfs.adiciona_vertice("A")
        self.grafo_k5_dfs.adiciona_vertice("B")
        self.grafo_k5_dfs.adiciona_vertice("C")
        self.grafo_k5_dfs.adiciona_vertice("D")
        self.grafo_k5_dfs.adiciona_vertice("E")
        self.grafo_k5_dfs.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k5_dfs.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k5_dfs.adiciona_aresta('a4', 'D', 'E')
        self.grafo_k5_dfs.adiciona_aresta('a10', 'C', 'E')

        self.grafo_k5_dfsb = MeuGrafo()
        self.grafo_k5_dfsb.adiciona_vertice("A")
        self.grafo_k5_dfsb.adiciona_vertice("B")
        self.grafo_k5_dfsb.adiciona_vertice("C")
        self.grafo_k5_dfsb.adiciona_vertice("D")
        self.grafo_k5_dfsb.adiciona_vertice("E")
        self.grafo_k5_dfsb.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k5_dfsb.adiciona_aresta('a3', 'C', 'D')
        self.grafo_k5_dfsb.adiciona_aresta('a5', 'E', 'A')
        self.grafo_k5_dfsb.adiciona_aresta('a10', 'C', 'E')

        self.grafo_k5_dfsc = MeuGrafo()
        self.grafo_k5_dfsc.adiciona_vertice("A")
        self.grafo_k5_dfsc.adiciona_vertice("B")
        self.grafo_k5_dfsc.adiciona_vertice("C")
        self.grafo_k5_dfsc.adiciona_vertice("D")
        self.grafo_k5_dfsc.adiciona_vertice("E")
        self.grafo_k5_dfsc.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k5_dfsc.adiciona_aresta('a4', 'D', 'E')
        self.grafo_k5_dfsc.adiciona_aresta('a7', 'A', 'D')
        self.grafo_k5_dfsc.adiciona_aresta('a10', 'C', 'E')

        self.grafo_k5_dfsd = MeuGrafo()
        self.grafo_k5_dfsd.adiciona_vertice("A")
        self.grafo_k5_dfsd.adiciona_vertice("B")
        self.grafo_k5_dfsd.adiciona_vertice("C")
        self.grafo_k5_dfsd.adiciona_vertice("D")
        self.grafo_k5_dfsd.adiciona_vertice("E")
        self.grafo_k5_dfsd.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k5_dfsd.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k5_dfsd.adiciona_aresta('a7', 'A', 'D')
        self.grafo_k5_dfsd.adiciona_aresta('a10', 'C', 'E')

        self.grafo_k5_bfs = MeuGrafo()
        self.grafo_k5_bfs.adiciona_vertice("A")
        self.grafo_k5_bfs.adiciona_vertice("B")
        self.grafo_k5_bfs.adiciona_vertice("C")
        self.grafo_k5_bfs.adiciona_vertice("D")
        self.grafo_k5_bfs.adiciona_vertice("E")
        self.grafo_k5_bfs.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k5_bfs.adiciona_aresta('a5', 'E', 'A')
        self.grafo_k5_bfs.adiciona_aresta('a6', 'A', 'C')
        self.grafo_k5_bfs.adiciona_aresta('a7', 'A', 'D')

        self.grafo_k5_bfsb = MeuGrafo()
        self.grafo_k5_bfsb.adiciona_vertice("A")
        self.grafo_k5_bfsb.adiciona_vertice("B")
        self.grafo_k5_bfsb.adiciona_vertice("C")
        self.grafo_k5_bfsb.adiciona_vertice("D")
        self.grafo_k5_bfsb.adiciona_vertice("E")
        self.grafo_k5_bfsb.adiciona_aresta('a1', 'A', 'B')
        self.grafo_k5_bfsb.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k5_bfsb.adiciona_aresta('a8', 'B', 'D')
        self.grafo_k5_bfsb.adiciona_aresta('a9', 'B', 'E')

        self.grafo_k5_bfsc = MeuGrafo()
        self.grafo_k5_bfsc.adiciona_vertice("A")
        self.grafo_k5_bfsc.adiciona_vertice("B")
        self.grafo_k5_bfsc.adiciona_vertice("C")
        self.grafo_k5_bfsc.adiciona_vertice("D")
        self.grafo_k5_bfsc.adiciona_vertice("E")
        self.grafo_k5_bfsc.adiciona_aresta('a2', 'B', 'C')
        self.grafo_k5_bfsc.adiciona_aresta('a3', 'C', 'D')
        self.grafo_k5_bfsc.adiciona_aresta('a6', 'A', 'C')
        self.grafo_k5_bfsc.adiciona_aresta('a10', 'C', 'E')

        self.grafo_k5_bfsd = MeuGrafo()
        self.grafo_k5_bfsd.adiciona_vertice("A")
        self.grafo_k5_bfsd.adiciona_vertice("B")
        self.grafo_k5_bfsd.adiciona_vertice("C")
        self.grafo_k5_bfsd.adiciona_vertice("D")
        self.grafo_k5_bfsd.adiciona_vertice("E")
        self.grafo_k5_bfsd.adiciona_aresta('a3', 'C', 'D')
        self.grafo_k5_bfsd.adiciona_aresta('a4', 'D', 'E')
        self.grafo_k5_bfsd.adiciona_aresta('a7', 'A', 'D')
        self.grafo_k5_bfsd.adiciona_aresta('a8', 'B', 'D')

        self.grafo_k5_bfse = MeuGrafo()
        self.grafo_k5_bfse.adiciona_vertice("A")
        self.grafo_k5_bfse.adiciona_vertice("B")
        self.grafo_k5_bfse.adiciona_vertice("C")
        self.grafo_k5_bfse.adiciona_vertice("D")
        self.grafo_k5_bfse.adiciona_vertice("E")
        self.grafo_k5_bfse.adiciona_aresta('a4', 'D', 'E')
        self.grafo_k5_bfse.adiciona_aresta('a5', 'E', 'A')
        self.grafo_k5_bfse.adiciona_aresta('a9', 'B', 'E')
        self.grafo_k5_bfse.adiciona_aresta('a10', 'C', 'E')

        # Grafo conexo com paralela
        self.grafo_conexo_p = MeuGrafo()
        self.grafo_conexo_p.adiciona_vertice("K")
        self.grafo_conexo_p.adiciona_vertice("L")
        self.grafo_conexo_p.adiciona_vertice("M")
        self.grafo_conexo_p.adiciona_vertice("N")
        self.grafo_conexo_p.adiciona_vertice("COISA")
        self.grafo_conexo_p.adiciona_aresta("KCOISA", "K", "COISA")
        self.grafo_conexo_p.adiciona_aresta("KL", "K", "L")
        self.grafo_conexo_p.adiciona_aresta("lm", "L", "M")
        self.grafo_conexo_p.adiciona_aresta("a1", "K", "COISA")
        self.grafo_conexo_p.adiciona_aresta("a2", "N", "L")

        # Arvores Grafo conexo com paralela
        self.grafo_conexo_p_dfs = MeuGrafo()
        self.grafo_conexo_p_dfs.adiciona_vertice("K")
        self.grafo_conexo_p_dfs.adiciona_vertice("L")
        self.grafo_conexo_p_dfs.adiciona_vertice("M")
        self.grafo_conexo_p_dfs.adiciona_vertice("N")
        self.grafo_conexo_p_dfs.adiciona_vertice("COISA")
        self.grafo_conexo_p_dfs.adiciona_aresta("KCOISA", "K", "COISA")
        self.grafo_conexo_p_dfs.adiciona_aresta("KL", "K", "L")
        self.grafo_conexo_p_dfs.adiciona_aresta("lm", "L", "M")
        self.grafo_conexo_p_dfs.adiciona_aresta("a2", "N", "L")

        self.grafo_conexo_p_bfs = MeuGrafo()
        self.grafo_conexo_p_bfs.adiciona_vertice("K")
        self.grafo_conexo_p_bfs.adiciona_vertice("L")
        self.grafo_conexo_p_bfs.adiciona_vertice("M")
        self.grafo_conexo_p_bfs.adiciona_vertice("N")
        self.grafo_conexo_p_bfs.adiciona_vertice("COISA")
        self.grafo_conexo_p_bfs.adiciona_aresta("KCOISA", "K", "COISA")
        self.grafo_conexo_p_bfs.adiciona_aresta("KL", "K", "L")
        self.grafo_conexo_p_bfs.adiciona_aresta("lm", "M", "L")
        self.grafo_conexo_p_bfs.adiciona_aresta("a2", "N", "L")

        # Grafo do roteiro
        self.grafo_roteiro = MeuGrafo()
        self.grafo_roteiro.adiciona_vertice("A")
        self.grafo_roteiro.adiciona_vertice("B")
        self.grafo_roteiro.adiciona_vertice("C")
        self.grafo_roteiro.adiciona_vertice("D")
        self.grafo_roteiro.adiciona_vertice("E")
        self.grafo_roteiro.adiciona_vertice("F")
        self.grafo_roteiro.adiciona_vertice("G")
        self.grafo_roteiro.adiciona_vertice("H")
        self.grafo_roteiro.adiciona_vertice("I")
        self.grafo_roteiro.adiciona_vertice("J")
        self.grafo_roteiro.adiciona_vertice("K")
        self.grafo_roteiro.adiciona_aresta('1', 'A', 'B')
        self.grafo_roteiro.adiciona_aresta('2', 'A', 'G')
        self.grafo_roteiro.adiciona_aresta('3', 'A', 'J')
        self.grafo_roteiro.adiciona_aresta('4', 'G', 'K')
        self.grafo_roteiro.adiciona_aresta('5', 'J', 'K')
        self.grafo_roteiro.adiciona_aresta('6', 'G', 'J')
        self.grafo_roteiro.adiciona_aresta('7', 'I', 'J')
        self.grafo_roteiro.adiciona_aresta('8', 'G', 'I')
        self.grafo_roteiro.adiciona_aresta('9', 'G', 'H')
        self.grafo_roteiro.adiciona_aresta('10', 'F', 'H')
        self.grafo_roteiro.adiciona_aresta('11', 'B', 'F')
        self.grafo_roteiro.adiciona_aresta('12', 'B', 'G')
        self.grafo_roteiro.adiciona_aresta('13', 'B', 'C')
        self.grafo_roteiro.adiciona_aresta('14', 'C', 'D')
        self.grafo_roteiro.adiciona_aresta('15', 'D', 'E')
        self.grafo_roteiro.adiciona_aresta('16', 'B', 'D')
        self.grafo_roteiro.adiciona_aresta('17', 'B', 'E')

        # Arvores grafo do roteiro
        self.grafo_roteiro_dfs = MeuGrafo()
        self.grafo_roteiro_dfs.adiciona_vertice("A")
        self.grafo_roteiro_dfs.adiciona_vertice("B")
        self.grafo_roteiro_dfs.adiciona_vertice("C")
        self.grafo_roteiro_dfs.adiciona_vertice("D")
        self.grafo_roteiro_dfs.adiciona_vertice("E")
        self.grafo_roteiro_dfs.adiciona_vertice("F")
        self.grafo_roteiro_dfs.adiciona_vertice("G")
        self.grafo_roteiro_dfs.adiciona_vertice("H")
        self.grafo_roteiro_dfs.adiciona_vertice("I")
        self.grafo_roteiro_dfs.adiciona_vertice("J")
        self.grafo_roteiro_dfs.adiciona_vertice("K")
        self.grafo_roteiro_dfs.adiciona_aresta('1', 'A', 'B')
        self.grafo_roteiro_dfs.adiciona_aresta('3', 'A', 'J')
        self.grafo_roteiro_dfs.adiciona_aresta('4', 'G', 'K')
        self.grafo_roteiro_dfs.adiciona_aresta('7', 'I', 'J')
        self.grafo_roteiro_dfs.adiciona_aresta('10', 'F', 'H')
        self.grafo_roteiro_dfs.adiciona_aresta('11', 'B', 'F')
        self.grafo_roteiro_dfs.adiciona_aresta('12', 'B', 'G')
        self.grafo_roteiro_dfs.adiciona_aresta('13', 'B', 'C')
        self.grafo_roteiro_dfs.adiciona_aresta('14', 'C', 'D')
        self.grafo_roteiro_dfs.adiciona_aresta('15', 'D', 'E')

        self.grafo_roteiro_bfs = MeuGrafo()
        self.grafo_roteiro_bfs.adiciona_vertice("A")
        self.grafo_roteiro_bfs.adiciona_vertice("B")
        self.grafo_roteiro_bfs.adiciona_vertice("C")
        self.grafo_roteiro_bfs.adiciona_vertice("D")
        self.grafo_roteiro_bfs.adiciona_vertice("E")
        self.grafo_roteiro_bfs.adiciona_vertice("F")
        self.grafo_roteiro_bfs.adiciona_vertice("G")
        self.grafo_roteiro_bfs.adiciona_vertice("H")
        self.grafo_roteiro_bfs.adiciona_vertice("I")
        self.grafo_roteiro_bfs.adiciona_vertice("J")
        self.grafo_roteiro_bfs.adiciona_vertice("K")
        self.grafo_roteiro_bfs.adiciona_aresta('1', 'A', 'B')
        self.grafo_roteiro_bfs.adiciona_aresta('2', 'A', 'G')
        self.grafo_roteiro_bfs.adiciona_aresta('3', 'A', 'J')
        self.grafo_roteiro_bfs.adiciona_aresta('4', 'G', 'K')
        self.grafo_roteiro_bfs.adiciona_aresta('5', 'J', 'K')
        self.grafo_roteiro_bfs.adiciona_aresta('6', 'G', 'J')
        self.grafo_roteiro_bfs.adiciona_aresta('7', 'I', 'J')
        self.grafo_roteiro_bfs.adiciona_aresta('8', 'G', 'I')
        self.grafo_roteiro_bfs.adiciona_aresta('9', 'G', 'H')
        self.grafo_roteiro_bfs.adiciona_aresta('10', 'F', 'H')
        self.grafo_roteiro_bfs.adiciona_aresta('11', 'B', 'F')
        self.grafo_roteiro_bfs.adiciona_aresta('12', 'B', 'G')
        self.grafo_roteiro_bfs.adiciona_aresta('13', 'B', 'C')
        self.grafo_roteiro_bfs.adiciona_aresta('14', 'C', 'D')
        self.grafo_roteiro_bfs.adiciona_aresta('15', 'D', 'E')
        self.grafo_roteiro_bfs.adiciona_aresta('16', 'B', 'D')
        self.grafo_roteiro_bfs.adiciona_aresta('17', 'B', 'E')

        # Arvores Grafo da Paraíba
        self.g_p_dfs = MeuGrafo()
        self.g_p_dfs.adiciona_vertice("J")
        self.g_p_dfs.adiciona_vertice("C")
        self.g_p_dfs.adiciona_vertice("E")
        self.g_p_dfs.adiciona_vertice("P")
        self.g_p_dfs.adiciona_vertice("M")
        self.g_p_dfs.adiciona_vertice("T")
        self.g_p_dfs.adiciona_vertice("Z")
        self.g_p_dfs.adiciona_aresta('a1', 'J', 'C')
        self.g_p_dfs.adiciona_aresta('a2', 'C', 'E')
        self.g_p_dfs.adiciona_aresta('a4', 'P', 'C')
        self.g_p_dfs.adiciona_aresta('a6', 'T', 'C')
        self.g_p_dfs.adiciona_aresta('a8', 'M', 'T')
        self.g_p_dfs.adiciona_aresta('a9', 'T', 'Z')

        self.g_p_bfs = MeuGrafo()
        self.g_p_bfs.adiciona_vertice("J")
        self.g_p_bfs.adiciona_vertice("C")
        self.g_p_bfs.adiciona_vertice("E")
        self.g_p_bfs.adiciona_vertice("P")
        self.g_p_bfs.adiciona_vertice("M")
        self.g_p_bfs.adiciona_vertice("T")
        self.g_p_bfs.adiciona_vertice("Z")
        self.g_p_bfs.adiciona_aresta('a1', 'J', 'C')
        self.g_p_bfs.adiciona_aresta('a2', 'C', 'E')
        self.g_p_bfs.adiciona_aresta('a4', 'P', 'C')
        self.g_p_bfs.adiciona_aresta('a6', 'T', 'C')
        self.g_p_bfs.adiciona_aresta('a7', 'M', 'C')
        self.g_p_bfs.adiciona_aresta('a9', 'T', 'Z')

        # Grafos para Minimum Spanning Tree

        self.g2 = MeuGrafo()
        self.g2.adiciona_vertice("A")
        self.g2.adiciona_vertice("B")
        self.g2.adiciona_vertice("C")
        self.g2.adiciona_vertice("D")
        self.g2.adiciona_vertice("E")
        self.g2.adiciona_aresta("a1", "A", "B", 1)
        self.g2.adiciona_aresta("a2", "A", "E", 3)
        self.g2.adiciona_aresta("a3", "A", "D", 3)
        self.g2.adiciona_aresta("a4", "B", "D", 4)
        self.g2.adiciona_aresta("a5", "B", "C", 3)
        self.g2.adiciona_aresta("a6", "D", "C", 2)
        self.g2.adiciona_aresta("a7", "D", "E", 2)

        self.g3 = MeuGrafo()
        self.g3.adiciona_vertice("A")
        self.g3.adiciona_vertice("B")
        self.g3.adiciona_vertice("C")
        self.g3.adiciona_vertice("D")
        self.g3.adiciona_vertice("E")
        self.g3.adiciona_vertice("F")
        self.g3.adiciona_aresta("a1", "A", "B", 1)
        self.g3.adiciona_aresta("a2", "A", "C", 4)
        self.g3.adiciona_aresta("a3", "B", "D", 4)
        self.g3.adiciona_aresta("a4", "D", "C", 1)
        self.g3.adiciona_aresta("a5", "C", "F", 3)
        self.g3.adiciona_aresta("a6", "B", "E", 2)
        self.g3.adiciona_aresta("a7", "E", "F", 1)

        # Grafo da Paraíba
        self.g_p_pesos = MeuGrafo()
        self.g_p_pesos.adiciona_vertice("J")
        self.g_p_pesos.adiciona_vertice("C")
        self.g_p_pesos.adiciona_vertice("E")
        self.g_p_pesos.adiciona_vertice("P")
        self.g_p_pesos.adiciona_vertice("M")
        self.g_p_pesos.adiciona_vertice("T")
        self.g_p_pesos.adiciona_vertice("Z")
        self.g_p_pesos.adiciona_aresta('a1', 'J', 'C', 1)
        self.g_p_pesos.adiciona_aresta('a2', 'C', 'E', 2)
        self.g_p_pesos.adiciona_aresta('a3', 'C', 'E', 4)
        self.g_p_pesos.adiciona_aresta('a4', 'P', 'C', 5)
        self.g_p_pesos.adiciona_aresta('a5', 'P', 'C', 1)
        self.g_p_pesos.adiciona_aresta('a6', 'T', 'C', 2)
        self.g_p_pesos.adiciona_aresta('a7', 'M', 'C', 1)
        self.g_p_pesos.adiciona_aresta('a8', 'M', 'T', 1)
        self.g_p_pesos.adiciona_aresta('a9', 'T', 'Z', 1)

        # Clone do Grafo da Paraíba para ver se o método equals está funcionando
        self.g_p2_pesos = MeuGrafo()
        self.g_p2_pesos.adiciona_vertice("J")
        self.g_p2_pesos.adiciona_vertice("C")
        self.g_p2_pesos.adiciona_vertice("E")
        self.g_p2_pesos.adiciona_vertice("P")
        self.g_p2_pesos.adiciona_vertice("M")
        self.g_p2_pesos.adiciona_vertice("T")
        self.g_p2_pesos.adiciona_vertice("Z")
        self.g_p2_pesos.adiciona_aresta('a1', 'J', 'C', 3)
        self.g_p2_pesos.adiciona_aresta('a2', 'C', 'E', 4)
        self.g_p2_pesos.adiciona_aresta('a3', 'C', 'E', 2)
        self.g_p2_pesos.adiciona_aresta('a4', 'P', 'C', 1)
        self.g_p2_pesos.adiciona_aresta('a5', 'P', 'C', 2)
        self.g_p2_pesos.adiciona_aresta('a6', 'T', 'C', 1)
        self.g_p2_pesos.adiciona_aresta('a7', 'M', 'C', 2)
        self.g_p2_pesos.adiciona_aresta('a8', 'M', 'T', 3)
        self.g_p2_pesos.adiciona_aresta('a9', 'T', 'Z', 2)

        # Outro clone do Grafo da Paraíba para ver se o método equals está funcionando
        # Esse tem um pequena diferença na primeira aresta
        self.g_p3_pesos = MeuGrafo()
        self.g_p3_pesos.adiciona_vertice("J")
        self.g_p3_pesos.adiciona_vertice("C")
        self.g_p3_pesos.adiciona_vertice("E")
        self.g_p3_pesos.adiciona_vertice("P")
        self.g_p3_pesos.adiciona_vertice("M")
        self.g_p3_pesos.adiciona_vertice("T")
        self.g_p3_pesos.adiciona_vertice("Z")
        self.g_p3_pesos.adiciona_aresta('a', 'J', 'C', 2)
        self.g_p3_pesos.adiciona_aresta('a2', 'C', 'E', 1)
        self.g_p3_pesos.adiciona_aresta('a3', 'C', 'E', 4)
        self.g_p3_pesos.adiciona_aresta('a4', 'P', 'C', 3)
        self.g_p3_pesos.adiciona_aresta('a5', 'P', 'C', 4)
        self.g_p3_pesos.adiciona_aresta('a6', 'T', 'C', 5)
        self.g_p3_pesos.adiciona_aresta('a7', 'M', 'C', 5)
        self.g_p3_pesos.adiciona_aresta('a8', 'M', 'T', 3)
        self.g_p3_pesos.adiciona_aresta('a9', 'T', 'Z', 1)

        # Outro clone do Grafo da Paraíba para ver se o método equals está funcionando
        # Esse tem um pequena diferença na segunda aresta
        self.g_p4_pesos = MeuGrafo()
        self.g_p4_pesos.adiciona_vertice("J")
        self.g_p4_pesos.adiciona_vertice("C")
        self.g_p4_pesos.adiciona_vertice("E")
        self.g_p4_pesos.adiciona_vertice("P")
        self.g_p4_pesos.adiciona_vertice("M")
        self.g_p4_pesos.adiciona_vertice("T")
        self.g_p4_pesos.adiciona_vertice("Z")
        self.g_p4_pesos.adiciona_aresta('a1', 'J', 'C', 2)
        self.g_p4_pesos.adiciona_aresta('a2', 'J', 'E', 2)
        self.g_p4_pesos.adiciona_aresta('a3', 'C', 'E', 2)
        self.g_p4_pesos.adiciona_aresta('a4', 'P', 'C', 1)
        self.g_p4_pesos.adiciona_aresta('a5', 'P', 'C', 3)
        self.g_p4_pesos.adiciona_aresta('a6', 'T', 'C', 1)
        self.g_p4_pesos.adiciona_aresta('a7', 'M', 'C', 1)
        self.g_p4_pesos.adiciona_aresta('a8', 'M', 'T', 2)
        self.g_p4_pesos.adiciona_aresta('a9', 'T', 'Z', 3)

        # Grafo da Paraíba sem arestas paralelas
        self.g_p_sem_paralelas_pesos = MeuGrafo()
        self.g_p_sem_paralelas_pesos.adiciona_vertice("J")
        self.g_p_sem_paralelas_pesos.adiciona_vertice("C")
        self.g_p_sem_paralelas_pesos.adiciona_vertice("E")
        self.g_p_sem_paralelas_pesos.adiciona_vertice("P")
        self.g_p_sem_paralelas_pesos.adiciona_vertice("M")
        self.g_p_sem_paralelas_pesos.adiciona_vertice("T")
        self.g_p_sem_paralelas_pesos.adiciona_vertice("Z")
        self.g_p_sem_paralelas_pesos.adiciona_aresta('a1', 'J', 'C', 1)
        self.g_p_sem_paralelas_pesos.adiciona_aresta('a2', 'C', 'E', 2)
        self.g_p_sem_paralelas_pesos.adiciona_aresta('a3', 'P', 'C', 2)
        self.g_p_sem_paralelas_pesos.adiciona_aresta('a4', 'T', 'C', 1)
        self.g_p_sem_paralelas_pesos.adiciona_aresta('a5', 'M', 'C', 1)
        self.g_p_sem_paralelas_pesos.adiciona_aresta('a6', 'M', 'T', 3)
        self.g_p_sem_paralelas_pesos.adiciona_aresta('a7', 'T', 'Z', 1)

        # Grafos completos
        self.g_c_pesos = MeuGrafo()
        self.g_c_pesos.adiciona_vertice("J")
        self.g_c_pesos.adiciona_vertice("C")
        self.g_c_pesos.adiciona_vertice("E")
        self.g_c_pesos.adiciona_vertice("P")
        self.g_c_pesos.adiciona_aresta('a1', 'J', 'C', 1)
        self.g_c_pesos.adiciona_aresta('a2', 'J', 'E', 2)
        self.g_c_pesos.adiciona_aresta('a3', 'J', 'P', 3)
        self.g_c_pesos.adiciona_aresta('a4', 'E', 'C', 1)
        self.g_c_pesos.adiciona_aresta('a5', 'P', 'C', 3)
        self.g_c_pesos.adiciona_aresta('a6', 'P', 'E', 1)

        self.g_c2_pesos = MeuGrafo()
        self.g_c2_pesos.adiciona_vertice("Nina")
        self.g_c2_pesos.adiciona_vertice("Maria")
        self.g_c2_pesos.adiciona_aresta('amiga', 'Nina', 'Maria', 5)

        self.g_c3_pesos = MeuGrafo()
        self.g_c3_pesos.adiciona_vertice("Único")

        # Grafos com laco
        self.g_l1_pesos = MeuGrafo()
        self.g_l1_pesos.adiciona_vertice("A")
        self.g_l1_pesos.adiciona_vertice("B")
        self.g_l1_pesos.adiciona_vertice("C")
        self.g_l1_pesos.adiciona_vertice("D")
        self.g_l1_pesos.adiciona_aresta('a1', 'A', 'A', 2)
        self.g_l1_pesos.adiciona_aresta('a2', 'A', 'B', 5)
        self.g_l1_pesos.adiciona_aresta('a3', 'A', 'A', 2)

        self.g_l2_pesos = MeuGrafo()
        self.g_l2_pesos.adiciona_vertice("A")
        self.g_l2_pesos.adiciona_vertice("B")
        self.g_l2_pesos.adiciona_vertice("C")
        self.g_l2_pesos.adiciona_vertice("D")
        self.g_l2_pesos.adiciona_aresta('a1', 'A', 'B', 3)
        self.g_l2_pesos.adiciona_aresta('a2', 'B', 'B', 1)
        self.g_l2_pesos.adiciona_aresta('a3', 'B', 'A', 2)

        self.g_l3_pesos = MeuGrafo()
        self.g_l3_pesos.adiciona_vertice("A")
        self.g_l3_pesos.adiciona_vertice("B")
        self.g_l3_pesos.adiciona_vertice("C")
        self.g_l3_pesos.adiciona_vertice("D")
        self.g_l3_pesos.adiciona_aresta('a1', 'C', 'A', 1)
        self.g_l3_pesos.adiciona_aresta('a2', 'C', 'C', 1)
        self.g_l3_pesos.adiciona_aresta('a3', 'D', 'D', 1)
        self.g_l3_pesos.adiciona_aresta('a4', 'D', 'D', 1)

        self.g_l4_pesos = MeuGrafo()
        self.g_l4_pesos.adiciona_vertice("D")
        self.g_l4_pesos.adiciona_aresta('a1', 'D', 'D', 2)

        self.g_l5_pesos = MeuGrafo()
        self.g_l5_pesos.adiciona_vertice("C")
        self.g_l5_pesos.adiciona_vertice("D")
        self.g_l5_pesos.adiciona_aresta('a1', 'D', 'C', 2)
        self.g_l5_pesos.adiciona_aresta('a2', 'C', 'C', 1)

        # Grafos desconexos
        self.g_d_pesos = MeuGrafo()
        self.g_d_pesos.adiciona_vertice("A")
        self.g_d_pesos.adiciona_vertice("B")
        self.g_d_pesos.adiciona_vertice("C")
        self.g_d_pesos.adiciona_vertice("D")
        self.g_d_pesos.adiciona_aresta('asd', 'A', 'B', 2)

        self.g_d2_pesos = MeuGrafo()
        self.g_d2_pesos.adiciona_vertice("A")
        self.g_d2_pesos.adiciona_vertice("B")
        self.g_d2_pesos.adiciona_vertice("C")
        self.g_d2_pesos.adiciona_vertice("D")

        # Grafo K3
        self.grafo_k3_pesos = MeuGrafo()
        self.grafo_k3_pesos.adiciona_vertice("A")
        self.grafo_k3_pesos.adiciona_vertice("B")
        self.grafo_k3_pesos.adiciona_vertice("C")
        self.grafo_k3_pesos.adiciona_aresta('a1', 'A', 'B', 2)
        self.grafo_k3_pesos.adiciona_aresta('a2', 'B', 'C', 2)
        self.grafo_k3_pesos.adiciona_aresta('a3', 'C', 'A', 3)

        # Grafo K4
        self.grafo_k4_pesos = MeuGrafo()
        self.grafo_k4_pesos.adiciona_vertice("A")
        self.grafo_k4_pesos.adiciona_vertice("B")
        self.grafo_k4_pesos.adiciona_vertice("C")
        self.grafo_k4_pesos.adiciona_vertice("D")
        self.grafo_k4_pesos.adiciona_aresta('a1', 'A', 'B', 5)
        self.grafo_k4_pesos.adiciona_aresta('a2', 'B', 'C', 1)
        self.grafo_k4_pesos.adiciona_aresta('a3', 'C', 'D', 4)
        self.grafo_k4_pesos.adiciona_aresta('a4', 'D', 'A', 3)
        self.grafo_k4_pesos.adiciona_aresta('a5', 'A', 'C', 2)
        self.grafo_k4_pesos.adiciona_aresta('a6', 'B', 'D', 4)

        # Grafo K5
        self.grafo_k5_pesos = MeuGrafo()
        self.grafo_k5_pesos.adiciona_vertice("A")
        self.grafo_k5_pesos.adiciona_vertice("B")
        self.grafo_k5_pesos.adiciona_vertice("C")
        self.grafo_k5_pesos.adiciona_vertice("D")
        self.grafo_k5_pesos.adiciona_vertice("E")
        self.grafo_k5_pesos.adiciona_aresta('a1', 'A', 'B', 1)
        self.grafo_k5_pesos.adiciona_aresta('a2', 'B', 'C', 2)
        self.grafo_k5_pesos.adiciona_aresta('a3', 'C', 'D', 3)
        self.grafo_k5_pesos.adiciona_aresta('a4', 'D', 'E', 4)
        self.grafo_k5_pesos.adiciona_aresta('a5', 'E', 'A', 4)
        self.grafo_k5_pesos.adiciona_aresta('a6', 'A', 'C', 4)
        self.grafo_k5_pesos.adiciona_aresta('a7', 'A', 'D', 4)
        self.grafo_k5_pesos.adiciona_aresta('a8', 'B', 'D', 4)
        self.grafo_k5_pesos.adiciona_aresta('a9', 'B', 'E', 4)
        self.grafo_k5_pesos.adiciona_aresta('a10', 'C', 'E', 4)

        # Grafo conexo com paralela
        self.grafo_conexo_p_pesos = MeuGrafo()
        self.grafo_conexo_p_pesos.adiciona_vertice("K")
        self.grafo_conexo_p_pesos.adiciona_vertice("L")
        self.grafo_conexo_p_pesos.adiciona_vertice("M")
        self.grafo_conexo_p_pesos.adiciona_vertice("N")
        self.grafo_conexo_p_pesos.adiciona_vertice("COISA")
        self.grafo_conexo_p_pesos.adiciona_aresta("KCOISA", "K", "COISA", 2)
        self.grafo_conexo_p_pesos.adiciona_aresta("KL", "K", "L", 1)
        self.grafo_conexo_p_pesos.adiciona_aresta("lm", "L", "M", 2)
        self.grafo_conexo_p_pesos.adiciona_aresta("a1", "K", "COISA", 3)
        self.grafo_conexo_p_pesos.adiciona_aresta("a2", "N", "L", 2)

        # Grafo do roteiro
        self.grafo_roteiro_pesos = MeuGrafo()
        self.grafo_roteiro_pesos.adiciona_vertice("A")
        self.grafo_roteiro_pesos.adiciona_vertice("B")
        self.grafo_roteiro_pesos.adiciona_vertice("C")
        self.grafo_roteiro_pesos.adiciona_vertice("D")
        self.grafo_roteiro_pesos.adiciona_vertice("E")
        self.grafo_roteiro_pesos.adiciona_vertice("F")
        self.grafo_roteiro_pesos.adiciona_vertice("G")
        self.grafo_roteiro_pesos.adiciona_vertice("H")
        self.grafo_roteiro_pesos.adiciona_vertice("I")
        self.grafo_roteiro_pesos.adiciona_vertice("J")
        self.grafo_roteiro_pesos.adiciona_vertice("K")
        self.grafo_roteiro_pesos.adiciona_aresta('1', 'A', 'B', 1)
        self.grafo_roteiro_pesos.adiciona_aresta('2', 'A', 'G', 2)
        self.grafo_roteiro_pesos.adiciona_aresta('3', 'A', 'J', 3)
        self.grafo_roteiro_pesos.adiciona_aresta('4', 'G', 'K', 4)
        self.grafo_roteiro_pesos.adiciona_aresta('5', 'J', 'K', 3)
        self.grafo_roteiro_pesos.adiciona_aresta('6', 'G', 'J', 2)
        self.grafo_roteiro_pesos.adiciona_aresta('7', 'I', 'J', 1)
        self.grafo_roteiro_pesos.adiciona_aresta('8', 'G', 'I', 1)
        self.grafo_roteiro_pesos.adiciona_aresta('9', 'G', 'H', 2)
        self.grafo_roteiro_pesos.adiciona_aresta('10', 'F', 'H', 3)
        self.grafo_roteiro_pesos.adiciona_aresta('11', 'B', 'F', 5)
        self.grafo_roteiro_pesos.adiciona_aresta('12', 'B', 'G', 4)
        self.grafo_roteiro_pesos.adiciona_aresta('13', 'B', 'C', 6)
        self.grafo_roteiro_pesos.adiciona_aresta('14', 'C', 'D', 4)
        self.grafo_roteiro_pesos.adiciona_aresta('15', 'D', 'E', 3)
        self.grafo_roteiro_pesos.adiciona_aresta('16', 'B', 'D', 4)
        self.grafo_roteiro_pesos.adiciona_aresta('17', 'B', 'E', 3)

        # Minimum Spanning Trees - Prim

        self.g2_prim = MeuGrafo()
        self.g2_prim.adiciona_vertice("A")
        self.g2_prim.adiciona_vertice("B")
        self.g2_prim.adiciona_vertice("C")
        self.g2_prim.adiciona_vertice("D")
        self.g2_prim.adiciona_vertice("E")
        self.g2_prim.adiciona_aresta("a1", "A", "B", 1)
        self.g2_prim.adiciona_aresta("a5", "B", "C", 3)
        self.g2_prim.adiciona_aresta("a6", "D", "C", 2)
        self.g2_prim.adiciona_aresta("a7", "D", "E", 2)

        self.g3_prim = MeuGrafo()
        self.g3_prim.adiciona_vertice("A")
        self.g3_prim.adiciona_vertice("B")
        self.g3_prim.adiciona_vertice("C")
        self.g3_prim.adiciona_vertice("D")
        self.g3_prim.adiciona_vertice("E")
        self.g3_prim.adiciona_vertice("F")
        self.g3_prim.adiciona_aresta("a1", "A", "B", 1)
        self.g3_prim.adiciona_aresta("a4", "D", "C", 1)
        self.g3_prim.adiciona_aresta("a5", "C", "F", 3)
        self.g3_prim.adiciona_aresta("a6", "B", "E", 2)
        self.g3_prim.adiciona_aresta("a7", "E", "F", 1)

        # Grafos da Paraíba
        self.g_p_prim = MeuGrafo()
        self.g_p_prim.adiciona_vertice("J")
        self.g_p_prim.adiciona_vertice("C")
        self.g_p_prim.adiciona_vertice("E")
        self.g_p_prim.adiciona_vertice("P")
        self.g_p_prim.adiciona_vertice("M")
        self.g_p_prim.adiciona_vertice("T")
        self.g_p_prim.adiciona_vertice("Z")
        self.g_p_prim.adiciona_aresta('a1', 'J', 'C', 1)
        self.g_p_prim.adiciona_aresta('a2', 'C', 'E', 2)
        self.g_p_prim.adiciona_aresta('a5', 'P', 'C', 1)
        self.g_p_prim.adiciona_aresta('a7', 'M', 'C', 1)
        self.g_p_prim.adiciona_aresta('a8', 'M', 'T', 1)
        self.g_p_prim.adiciona_aresta('a9', 'T', 'Z', 1)

        self.g_p2_prim = MeuGrafo()
        self.g_p2_prim.adiciona_vertice("J")
        self.g_p2_prim.adiciona_vertice("C")
        self.g_p2_prim.adiciona_vertice("E")
        self.g_p2_prim.adiciona_vertice("P")
        self.g_p2_prim.adiciona_vertice("M")
        self.g_p2_prim.adiciona_vertice("T")
        self.g_p2_prim.adiciona_vertice("Z")
        self.g_p2_prim.adiciona_aresta('a1', 'J', 'C', 3)
        self.g_p2_prim.adiciona_aresta('a2', 'C', 'E', 4)
        self.g_p2_prim.adiciona_aresta('a3', 'C', 'E', 2)
        self.g_p2_prim.adiciona_aresta('a4', 'P', 'C', 1)
        self.g_p2_prim.adiciona_aresta('a5', 'P', 'C', 2)
        self.g_p2_prim.adiciona_aresta('a6', 'T', 'C', 1)
        self.g_p2_prim.adiciona_aresta('a7', 'M', 'C', 2)
        self.g_p2_prim.adiciona_aresta('a8', 'M', 'T', 3)
        self.g_p2_prim.adiciona_aresta('a9', 'T', 'Z', 2)

        self.g_p3_prim = MeuGrafo()
        self.g_p3_prim.adiciona_vertice("J")
        self.g_p3_prim.adiciona_vertice("C")
        self.g_p3_prim.adiciona_vertice("E")
        self.g_p3_prim.adiciona_vertice("P")
        self.g_p3_prim.adiciona_vertice("M")
        self.g_p3_prim.adiciona_vertice("T")
        self.g_p3_prim.adiciona_vertice("Z")
        self.g_p3_prim.adiciona_aresta('a', 'J', 'C', 2)
        self.g_p3_prim.adiciona_aresta('a2', 'C', 'E', 1)
        self.g_p3_prim.adiciona_aresta('a3', 'C', 'E', 4)
        self.g_p3_prim.adiciona_aresta('a4', 'P', 'C', 3)
        self.g_p3_prim.adiciona_aresta('a5', 'P', 'C', 4)
        self.g_p3_prim.adiciona_aresta('a6', 'T', 'C', 5)
        self.g_p3_prim.adiciona_aresta('a7', 'M', 'C', 5)
        self.g_p3_prim.adiciona_aresta('a8', 'M', 'T', 3)
        self.g_p3_prim.adiciona_aresta('a9', 'T', 'Z', 1)

        self.g_p4_prim = MeuGrafo()
        self.g_p4_prim.adiciona_vertice("J")
        self.g_p4_prim.adiciona_vertice("C")
        self.g_p4_prim.adiciona_vertice("E")
        self.g_p4_prim.adiciona_vertice("P")
        self.g_p4_prim.adiciona_vertice("M")
        self.g_p4_prim.adiciona_vertice("T")
        self.g_p4_prim.adiciona_vertice("Z")
        self.g_p4_prim.adiciona_aresta('a1', 'J', 'C', 2)
        self.g_p4_prim.adiciona_aresta('a2', 'J', 'E', 2)
        self.g_p4_prim.adiciona_aresta('a3', 'C', 'E', 2)
        self.g_p4_prim.adiciona_aresta('a4', 'P', 'C', 1)
        self.g_p4_prim.adiciona_aresta('a5', 'P', 'C', 3)
        self.g_p4_prim.adiciona_aresta('a6', 'T', 'C', 1)
        self.g_p4_prim.adiciona_aresta('a7', 'M', 'C', 1)
        self.g_p4_prim.adiciona_aresta('a8', 'M', 'T', 2)
        self.g_p4_prim.adiciona_aresta('a9', 'T', 'Z', 3)

        self.g_p_sem_paralelas_prim = MeuGrafo()
        self.g_p_sem_paralelas_prim.adiciona_vertice("J")
        self.g_p_sem_paralelas_prim.adiciona_vertice("C")
        self.g_p_sem_paralelas_prim.adiciona_vertice("E")
        self.g_p_sem_paralelas_prim.adiciona_vertice("P")
        self.g_p_sem_paralelas_prim.adiciona_vertice("M")
        self.g_p_sem_paralelas_prim.adiciona_vertice("T")
        self.g_p_sem_paralelas_prim.adiciona_vertice("Z")
        self.g_p_sem_paralelas_prim.adiciona_aresta('a1', 'J', 'C', 1)
        self.g_p_sem_paralelas_prim.adiciona_aresta('a2', 'C', 'E', 2)
        self.g_p_sem_paralelas_prim.adiciona_aresta('a3', 'P', 'C', 2)
        self.g_p_sem_paralelas_prim.adiciona_aresta('a4', 'T', 'C', 1)
        self.g_p_sem_paralelas_prim.adiciona_aresta('a5', 'M', 'C', 1)
        self.g_p_sem_paralelas_prim.adiciona_aresta('a6', 'M', 'T', 3)
        self.g_p_sem_paralelas_prim.adiciona_aresta('a7', 'T', 'Z', 1)

        # Grafos completos
        self.g_c_prim = MeuGrafo()
        self.g_c_prim.adiciona_vertice("J")
        self.g_c_prim.adiciona_vertice("C")
        self.g_c_prim.adiciona_vertice("E")
        self.g_c_prim.adiciona_vertice("P")
        self.g_c_prim.adiciona_aresta('a1', 'J', 'C', 1)
        self.g_c_prim.adiciona_aresta('a4', 'E', 'C', 1)
        self.g_c_prim.adiciona_aresta('a6', 'P', 'E', 1)

        self.g_c2_prim = MeuGrafo()
        self.g_c2_prim.adiciona_vertice("Nina")
        self.g_c2_prim.adiciona_vertice("Maria")
        self.g_c2_prim.adiciona_aresta('amiga', 'Nina', 'Maria', 5)

        # Grafos com laco
        self.g_l4_prim = MeuGrafo()
        self.g_l4_prim.adiciona_vertice("D")

        self.g_l5_prim = MeuGrafo()
        self.g_l5_prim.adiciona_vertice("C")
        self.g_l5_prim.adiciona_vertice("D")
        self.g_l5_prim.adiciona_aresta('a1', 'D', 'C', 2)

        # Grafos Kn
        self.grafo_k3_prim = MeuGrafo()
        self.grafo_k3_prim.adiciona_vertice("A")
        self.grafo_k3_prim.adiciona_vertice("B")
        self.grafo_k3_prim.adiciona_vertice("C")
        self.grafo_k3_prim.adiciona_aresta('a1', 'A', 'B', 2)
        self.grafo_k3_prim.adiciona_aresta('a2', 'B', 'C', 2)

        self.grafo_k4_prim = MeuGrafo()
        self.grafo_k4_prim.adiciona_vertice("A")
        self.grafo_k4_prim.adiciona_vertice("B")
        self.grafo_k4_prim.adiciona_vertice("C")
        self.grafo_k4_prim.adiciona_vertice("D")
        self.grafo_k4_prim.adiciona_aresta('a2', 'B', 'C', 1)
        self.grafo_k4_prim.adiciona_aresta('a4', 'D', 'A', 3)
        self.grafo_k4_prim.adiciona_aresta('a5', 'A', 'C', 2)

        self.grafo_k5_prim = MeuGrafo()
        self.grafo_k5_prim.adiciona_vertice("A")
        self.grafo_k5_prim.adiciona_vertice("B")
        self.grafo_k5_prim.adiciona_vertice("C")
        self.grafo_k5_prim.adiciona_vertice("D")
        self.grafo_k5_prim.adiciona_vertice("E")
        self.grafo_k5_prim.adiciona_aresta('a1', 'A', 'B', 1)
        self.grafo_k5_prim.adiciona_aresta('a2', 'B', 'C', 2)
        self.grafo_k5_prim.adiciona_aresta('a3', 'C', 'D', 3)
        self.grafo_k5_prim.adiciona_aresta('a4', 'D', 'E', 4)

        # Grafo conexo com paralela
        self.grafo_conexo_p_prim = MeuGrafo()
        self.grafo_conexo_p_prim.adiciona_vertice("K")
        self.grafo_conexo_p_prim.adiciona_vertice("L")
        self.grafo_conexo_p_prim.adiciona_vertice("M")
        self.grafo_conexo_p_prim.adiciona_vertice("N")
        self.grafo_conexo_p_prim.adiciona_vertice("COISA")
        self.grafo_conexo_p_prim.adiciona_aresta("KCOISA", "K", "COISA", 2)
        self.grafo_conexo_p_prim.adiciona_aresta("KL", "K", "L", 1)
        self.grafo_conexo_p_prim.adiciona_aresta("lm", "L", "M", 2)
        self.grafo_conexo_p_prim.adiciona_aresta("a1", "K", "COISA", 3)
        self.grafo_conexo_p_prim.adiciona_aresta("a2", "N", "L", 2)

        # Grafo do roteiro
        self.grafo_roteiro_prim = MeuGrafo()
        self.grafo_roteiro_prim.adiciona_vertice("A")
        self.grafo_roteiro_prim.adiciona_vertice("B")
        self.grafo_roteiro_prim.adiciona_vertice("C")
        self.grafo_roteiro_prim.adiciona_vertice("D")
        self.grafo_roteiro_prim.adiciona_vertice("E")
        self.grafo_roteiro_prim.adiciona_vertice("F")
        self.grafo_roteiro_prim.adiciona_vertice("G")
        self.grafo_roteiro_prim.adiciona_vertice("H")
        self.grafo_roteiro_prim.adiciona_vertice("I")
        self.grafo_roteiro_prim.adiciona_vertice("J")
        self.grafo_roteiro_prim.adiciona_vertice("K")
        self.grafo_roteiro_prim.adiciona_aresta('1', 'A', 'B', 1)
        self.grafo_roteiro_prim.adiciona_aresta('2', 'A', 'G', 2)
        self.grafo_roteiro_prim.adiciona_aresta('3', 'A', 'J', 3)
        self.grafo_roteiro_prim.adiciona_aresta('4', 'G', 'K', 4)
        self.grafo_roteiro_prim.adiciona_aresta('5', 'J', 'K', 3)
        self.grafo_roteiro_prim.adiciona_aresta('6', 'G', 'J', 2)
        self.grafo_roteiro_prim.adiciona_aresta('7', 'I', 'J', 1)
        self.grafo_roteiro_prim.adiciona_aresta('8', 'G', 'I', 1)
        self.grafo_roteiro_prim.adiciona_aresta('9', 'G', 'H', 2)
        self.grafo_roteiro_prim.adiciona_aresta('10', 'F', 'H', 3)
        self.grafo_roteiro_prim.adiciona_aresta('11', 'B', 'F', 5)
        self.grafo_roteiro_prim.adiciona_aresta('12', 'B', 'G', 4)
        self.grafo_roteiro_prim.adiciona_aresta('13', 'B', 'C', 6)
        self.grafo_roteiro_prim.adiciona_aresta('14', 'C', 'D', 4)
        self.grafo_roteiro_prim.adiciona_aresta('15', 'D', 'E', 3)
        self.grafo_roteiro_prim.adiciona_aresta('16', 'B', 'D', 4)
        self.grafo_roteiro_prim.adiciona_aresta('17', 'B', 'E', 3)

        # Minimum Spanning Trees - Kruskall

        self.g2_kruskal = MeuGrafo()
        self.g2_kruskal.adiciona_vertice("A")
        self.g2_kruskal.adiciona_vertice("B")
        self.g2_kruskal.adiciona_vertice("C")
        self.g2_kruskal.adiciona_vertice("D")
        self.g2_kruskal.adiciona_vertice("E")
        self.g2_kruskal.adiciona_aresta("a1", "A", "B", 1)
        self.g2_kruskal.adiciona_aresta("a2", "A", "E", 3)
        self.g2_kruskal.adiciona_aresta("a6", "D", "C", 2)
        self.g2_kruskal.adiciona_aresta("a7", "D", "E", 2)

        self.g3_kruskal = MeuGrafo()
        self.g3_kruskal.adiciona_vertice("A")
        self.g3_kruskal.adiciona_vertice("B")
        self.g3_kruskal.adiciona_vertice("C")
        self.g3_kruskal.adiciona_vertice("D")
        self.g3_kruskal.adiciona_vertice("E")
        self.g3_kruskal.adiciona_vertice("F")
        self.g3_kruskal.adiciona_aresta("a1", "A", "B", 1)
        self.g3_kruskal.adiciona_aresta("a4", "D", "C", 1)
        self.g3_kruskal.adiciona_aresta("a5", "C", "F", 3)
        self.g3_kruskal.adiciona_aresta("a6", "B", "E", 2)
        self.g3_kruskal.adiciona_aresta("a7", "E", "F", 1)

        # Grafo da Paraíba
        self.g_p_kruskal = MeuGrafo()
        self.g_p_kruskal.adiciona_vertice("J")
        self.g_p_kruskal.adiciona_vertice("C")
        self.g_p_kruskal.adiciona_vertice("E")
        self.g_p_kruskal.adiciona_vertice("P")
        self.g_p_kruskal.adiciona_vertice("M")
        self.g_p_kruskal.adiciona_vertice("T")
        self.g_p_kruskal.adiciona_vertice("Z")
        self.g_p_kruskal.adiciona_aresta('a1', 'J', 'C', 1)
        self.g_p_kruskal.adiciona_aresta('a2', 'C', 'E', 2)
        self.g_p_kruskal.adiciona_aresta('a5', 'P', 'C', 1)
        self.g_p_kruskal.adiciona_aresta('a7', 'M', 'C', 1)
        self.g_p_kruskal.adiciona_aresta('a8', 'M', 'T', 1)
        self.g_p_kruskal.adiciona_aresta('a9', 'T', 'Z', 1)

        self.g_p2_kruskal = MeuGrafo()
        self.g_p2_kruskal.adiciona_vertice("J")
        self.g_p2_kruskal.adiciona_vertice("C")
        self.g_p2_kruskal.adiciona_vertice("E")
        self.g_p2_kruskal.adiciona_vertice("P")
        self.g_p2_kruskal.adiciona_vertice("M")
        self.g_p2_kruskal.adiciona_vertice("T")
        self.g_p2_kruskal.adiciona_vertice("Z")
        self.g_p2_kruskal.adiciona_aresta('a1', 'J', 'C', 3)
        self.g_p2_kruskal.adiciona_aresta('a3', 'C', 'E', 2)
        self.g_p2_kruskal.adiciona_aresta('a4', 'P', 'C', 1)
        self.g_p2_kruskal.adiciona_aresta('a6', 'T', 'C', 1)
        self.g_p2_kruskal.adiciona_aresta('a7', 'M', 'C', 2)
        self.g_p2_kruskal.adiciona_aresta('a9', 'T', 'Z', 2)

        self.g_p3_kruskal = MeuGrafo()
        self.g_p3_kruskal.adiciona_vertice("J")
        self.g_p3_kruskal.adiciona_vertice("C")
        self.g_p3_kruskal.adiciona_vertice("E")
        self.g_p3_kruskal.adiciona_vertice("P")
        self.g_p3_kruskal.adiciona_vertice("M")
        self.g_p3_kruskal.adiciona_vertice("T")
        self.g_p3_kruskal.adiciona_vertice("Z")
        self.g_p3_kruskal.adiciona_aresta('a', 'J', 'C', 2)
        self.g_p3_kruskal.adiciona_aresta('a2', 'C', 'E', 1)
        self.g_p3_kruskal.adiciona_aresta('a4', 'P', 'C', 3)
        self.g_p3_kruskal.adiciona_aresta('a6', 'T', 'C', 5)
        self.g_p3_kruskal.adiciona_aresta('a8', 'M', 'T', 3)
        self.g_p3_kruskal.adiciona_aresta('a9', 'T', 'Z', 1)

        self.g_p4_kruskal= MeuGrafo()
        self.g_p4_kruskal.adiciona_vertice("J")
        self.g_p4_kruskal.adiciona_vertice("C")
        self.g_p4_kruskal.adiciona_vertice("E")
        self.g_p4_kruskal.adiciona_vertice("P")
        self.g_p4_kruskal.adiciona_vertice("M")
        self.g_p4_kruskal.adiciona_vertice("T")
        self.g_p4_kruskal.adiciona_vertice("Z")
        self.g_p4_kruskal.adiciona_aresta('a1', 'J', 'C', 2)
        self.g_p4_kruskal.adiciona_aresta('a2', 'J', 'E', 2)
        self.g_p4_kruskal.adiciona_aresta('a4', 'P', 'C', 1)
        self.g_p4_kruskal.adiciona_aresta('a6', 'T', 'C', 1)
        self.g_p4_kruskal.adiciona_aresta('a7', 'M', 'C', 1)
        self.g_p4_kruskal.adiciona_aresta('a9', 'T', 'Z', 3)

        self.g_p_sem_paralelas_kruskal = MeuGrafo()
        self.g_p_sem_paralelas_kruskal.adiciona_vertice("J")
        self.g_p_sem_paralelas_kruskal.adiciona_vertice("C")
        self.g_p_sem_paralelas_kruskal.adiciona_vertice("E")
        self.g_p_sem_paralelas_kruskal.adiciona_vertice("P")
        self.g_p_sem_paralelas_kruskal.adiciona_vertice("M")
        self.g_p_sem_paralelas_kruskal.adiciona_vertice("T")
        self.g_p_sem_paralelas_kruskal.adiciona_vertice("Z")
        self.g_p_sem_paralelas_kruskal.adiciona_aresta('a1', 'J', 'C', 1)
        self.g_p_sem_paralelas_kruskal.adiciona_aresta('a2', 'C', 'E', 2)
        self.g_p_sem_paralelas_kruskal.adiciona_aresta('a3', 'P', 'C', 2)
        self.g_p_sem_paralelas_kruskal.adiciona_aresta('a4', 'T', 'C', 1)
        self.g_p_sem_paralelas_kruskal.adiciona_aresta('a5', 'M', 'C', 1)
        self.g_p_sem_paralelas_kruskal.adiciona_aresta('a7', 'T', 'Z', 1)

        # Grafos completos
        self.g_c_kruskal = MeuGrafo()
        self.g_c_kruskal.adiciona_vertice("J")
        self.g_c_kruskal.adiciona_vertice("C")
        self.g_c_kruskal.adiciona_vertice("E")
        self.g_c_kruskal.adiciona_vertice("P")
        self.g_c_kruskal.adiciona_aresta('a1', 'J', 'C', 1)
        self.g_c_kruskal.adiciona_aresta('a4', 'E', 'C', 1)
        self.g_c_kruskal.adiciona_aresta('a6', 'P', 'E', 1)

        self.g_c2_kruskal= MeuGrafo()
        self.g_c2_kruskal.adiciona_vertice("Nina")
        self.g_c2_kruskal.adiciona_vertice("Maria")
        self.g_c2_kruskal.adiciona_aresta('amiga', 'Nina', 'Maria', 5)

        self.g_c3_kruskal = MeuGrafo()
        self.g_c3_kruskal.adiciona_vertice("Único")

        # Grafos com laços
        self.g_l4_kruskal = MeuGrafo()
        self.g_l4_kruskal.adiciona_vertice("D")

        self.g_l5_kruskal = MeuGrafo()
        self.g_l5_kruskal.adiciona_vertice("C")
        self.g_l5_kruskal.adiciona_vertice("D")
        self.g_l5_kruskal.adiciona_aresta('a1', 'D', 'C', 2)

        # Grafos Kn
        self.grafo_k3_kruskal = MeuGrafo()
        self.grafo_k3_kruskal.adiciona_vertice("A")
        self.grafo_k3_kruskal.adiciona_vertice("B")
        self.grafo_k3_kruskal.adiciona_vertice("C")
        self.grafo_k3_kruskal.adiciona_aresta('a1', 'A', 'B', 2)
        self.grafo_k3_kruskal.adiciona_aresta('a2', 'B', 'C', 2)

        self.grafo_k4_kruskal = MeuGrafo()
        self.grafo_k4_kruskal.adiciona_vertice("A")
        self.grafo_k4_kruskal.adiciona_vertice("B")
        self.grafo_k4_kruskal.adiciona_vertice("C")
        self.grafo_k4_kruskal.adiciona_vertice("D")
        self.grafo_k4_kruskal.adiciona_aresta('a2', 'B', 'C', 1)
        self.grafo_k4_kruskal.adiciona_aresta('a4', 'D', 'A', 3)
        self.grafo_k4_kruskal.adiciona_aresta('a5', 'A', 'C', 2)

        self.grafo_k5_kruskal = MeuGrafo()
        self.grafo_k5_kruskal.adiciona_vertice("A")
        self.grafo_k5_kruskal.adiciona_vertice("B")
        self.grafo_k5_kruskal.adiciona_vertice("C")
        self.grafo_k5_kruskal.adiciona_vertice("D")
        self.grafo_k5_kruskal.adiciona_vertice("E")
        self.grafo_k5_kruskal.adiciona_aresta('a1', 'A', 'B', 1)
        self.grafo_k5_kruskal.adiciona_aresta('a2', 'B', 'C', 2)
        self.grafo_k5_kruskal.adiciona_aresta('a3', 'C', 'D', 3)
        self.grafo_k5_kruskal.adiciona_aresta('a4', 'D', 'E', 4)

        # Grafo conexo com paralela
        self.grafo_conexo_p_kruskal = MeuGrafo()
        self.grafo_conexo_p_kruskal.adiciona_vertice("K")
        self.grafo_conexo_p_kruskal.adiciona_vertice("L")
        self.grafo_conexo_p_kruskal.adiciona_vertice("M")
        self.grafo_conexo_p_kruskal.adiciona_vertice("N")
        self.grafo_conexo_p_kruskal.adiciona_vertice("COISA")
        self.grafo_conexo_p_kruskal.adiciona_aresta("KCOISA", "K", "COISA", 2)
        self.grafo_conexo_p_kruskal.adiciona_aresta("KL", "K", "L", 1)
        self.grafo_conexo_p_kruskal.adiciona_aresta("lm", "L", "M", 2)
        self.grafo_conexo_p_kruskal.adiciona_aresta("a2", "N", "L", 2)

        # Grafo do roteiro
        self.grafo_roteiro_kruskal = MeuGrafo()
        self.grafo_roteiro_kruskal.adiciona_vertice("A")
        self.grafo_roteiro_kruskal.adiciona_vertice("B")
        self.grafo_roteiro_kruskal.adiciona_vertice("C")
        self.grafo_roteiro_kruskal.adiciona_vertice("D")
        self.grafo_roteiro_kruskal.adiciona_vertice("E")
        self.grafo_roteiro_kruskal.adiciona_vertice("F")
        self.grafo_roteiro_kruskal.adiciona_vertice("G")
        self.grafo_roteiro_kruskal.adiciona_vertice("H")
        self.grafo_roteiro_kruskal.adiciona_vertice("I")
        self.grafo_roteiro_kruskal.adiciona_vertice("J")
        self.grafo_roteiro_kruskal.adiciona_vertice("K")
        self.grafo_roteiro_kruskal.adiciona_aresta('1', 'A', 'B', 1)
        self.grafo_roteiro_kruskal.adiciona_aresta('2', 'A', 'G', 2)
        self.grafo_roteiro_kruskal.adiciona_aresta('5', 'J', 'K', 3)
        self.grafo_roteiro_kruskal.adiciona_aresta('7', 'I', 'J', 1)
        self.grafo_roteiro_kruskal.adiciona_aresta('8', 'G', 'I', 1)
        self.grafo_roteiro_kruskal.adiciona_aresta('9', 'G', 'H', 2)
        self.grafo_roteiro_kruskal.adiciona_aresta('10', 'F', 'H', 3)
        self.grafo_roteiro_kruskal.adiciona_aresta('14', 'C', 'D', 4)
        self.grafo_roteiro_kruskal.adiciona_aresta('15', 'D', 'E', 3)
        self.grafo_roteiro_kruskal.adiciona_aresta('17', 'B', 'E', 3)

    def test_adiciona_aresta(self):
        self.assertTrue(self.g_p.adiciona_aresta('a10', 'J', 'C'))
        a = Aresta("zxc", self.g_p.get_vertice("C"), self.g_p.get_vertice("Z"))
        self.assertTrue(self.g_p.adiciona_aresta(a))
        with self.assertRaises(ArestaInvalidaError):
            self.assertTrue(self.g_p.adiciona_aresta(a))
        with self.assertRaises(VerticeInvalidoError):
            self.assertTrue(self.g_p.adiciona_aresta('b1', '', 'C'))
        with self.assertRaises(VerticeInvalidoError):
            self.assertTrue(self.g_p.adiciona_aresta('b1', 'A', 'C'))
        with self.assertRaises(NotImplementedError):
            self.g_p.adiciona_aresta('')
        with self.assertRaises(NotImplementedError):
            self.g_p.adiciona_aresta('aa-bb')
        with self.assertRaises(VerticeInvalidoError):
            self.g_p.adiciona_aresta('x', 'J', 'V')
        with self.assertRaises(ArestaInvalidaError):
            self.g_p.adiciona_aresta('a1', 'J', 'C')

    def test_eq(self):
        self.assertEqual(self.g_p, self.g_p2)
        self.assertNotEqual(self.g_p, self.g_p3)
        self.assertNotEqual(self.g_p, self.g_p_sem_paralelas)
        self.assertNotEqual(self.g_p, self.g_p4)

    def test_vertices_nao_adjacentes(self):
        self.assertEqual(self.g_p.vertices_nao_adjacentes(),
                         {'J-E', 'J-P', 'J-M', 'J-T', 'J-Z', 'C-Z', 'E-P', 'E-M', 'E-T', 'E-Z', 'P-M', 'P-T', 'P-Z',
                          'M-Z'})
        self.assertEqual(self.g_d.vertices_nao_adjacentes(), {'A-C', 'A-D', 'B-C', 'B-D', 'C-D'})
        self.assertEqual(self.g_d2.vertices_nao_adjacentes(), {'A-B', 'A-C', 'A-D', 'B-C', 'B-D', 'C-D'})
        self.assertEqual(self.g_c.vertices_nao_adjacentes(), set())
        self.assertEqual(self.g_c3.vertices_nao_adjacentes(), set())

    def test_ha_laco(self):
        self.assertFalse(self.g_p.ha_laco())
        self.assertFalse(self.g_p2.ha_laco())
        self.assertFalse(self.g_p3.ha_laco())
        self.assertFalse(self.g_p4.ha_laco())
        self.assertFalse(self.g_p_sem_paralelas.ha_laco())
        self.assertFalse(self.g_d.ha_laco())
        self.assertFalse(self.g_c.ha_laco())
        self.assertFalse(self.g_c2.ha_laco())
        self.assertFalse(self.g_c3.ha_laco())
        self.assertTrue(self.g_l1.ha_laco())
        self.assertTrue(self.g_l2.ha_laco())
        self.assertTrue(self.g_l3.ha_laco())
        self.assertTrue(self.g_l4.ha_laco())
        self.assertTrue(self.g_l5.ha_laco())

    def test_grau(self):
        # Paraíba
        self.assertEqual(self.g_p.grau('J'), 1)
        self.assertEqual(self.g_p.grau('C'), 7)
        self.assertEqual(self.g_p.grau('E'), 2)
        self.assertEqual(self.g_p.grau('P'), 2)
        self.assertEqual(self.g_p.grau('M'), 2)
        self.assertEqual(self.g_p.grau('T'), 3)
        self.assertEqual(self.g_p.grau('Z'), 1)
        with self.assertRaises(VerticeInvalidoError):
            self.assertEqual(self.g_p.grau('G'), 5)

        self.assertEqual(self.g_d.grau('A'), 1)
        self.assertEqual(self.g_d.grau('C'), 0)
        self.assertNotEqual(self.g_d.grau('D'), 2)
        self.assertEqual(self.g_d2.grau('A'), 0)

        # Completos
        self.assertEqual(self.g_c.grau('J'), 3)
        self.assertEqual(self.g_c.grau('C'), 3)
        self.assertEqual(self.g_c.grau('E'), 3)
        self.assertEqual(self.g_c.grau('P'), 3)

        # Com laço. Lembrando que cada laço conta 2 vezes por vértice para cálculo do grau
        self.assertEqual(self.g_l1.grau('A'), 5)
        self.assertEqual(self.g_l2.grau('B'), 4)
        self.assertEqual(self.g_l4.grau('D'), 2)

    def test_ha_paralelas(self):
        self.assertTrue(self.g_p.ha_paralelas())
        self.assertFalse(self.g_p_sem_paralelas.ha_paralelas())
        self.assertFalse(self.g_c.ha_paralelas())
        self.assertFalse(self.g_c2.ha_paralelas())
        self.assertFalse(self.g_c3.ha_paralelas())
        self.assertTrue(self.g_l1.ha_paralelas())

    def test_arestas_sobre_vertice(self):
        self.assertEqual(self.g_p.arestas_sobre_vertice('J'), {'a1'})
        self.assertEqual(self.g_p.arestas_sobre_vertice('C'), {'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7'})
        self.assertEqual(self.g_p.arestas_sobre_vertice('M'), {'a7', 'a8'})
        self.assertEqual(self.g_l2.arestas_sobre_vertice('B'), {'a1', 'a2', 'a3'})
        self.assertEqual(self.g_d.arestas_sobre_vertice('C'), set())
        self.assertEqual(self.g_d.arestas_sobre_vertice('A'), {'asd'})
        with self.assertRaises(VerticeInvalidoError):
            self.g_p.arestas_sobre_vertice('A')

    def test_eh_completo(self):
        self.assertFalse(self.g_p.eh_completo())
        self.assertFalse((self.g_p_sem_paralelas.eh_completo()))
        self.assertTrue((self.g_c.eh_completo()))
        self.assertTrue((self.g_c2.eh_completo()))
        self.assertTrue((self.g_c3.eh_completo()))
        self.assertFalse((self.g_l1.eh_completo()))
        self.assertFalse((self.g_l2.eh_completo()))
        self.assertFalse((self.g_l3.eh_completo()))
        self.assertFalse((self.g_l4.eh_completo()))
        self.assertFalse((self.g_l5.eh_completo()))
        self.assertFalse((self.g_d.eh_completo()))
        self.assertFalse((self.g_d2.eh_completo()))

    def test_dfs(self):
        with self.assertRaises(VerticeInvalidoError):
            self.grafo_k3.dfs('Z')
        with self.assertRaises(VerticeInvalidoError):
                self.grafo_k4.dfs('abluble')
        with self.assertRaises(VerticeInvalidoError):
                self.grafo_k5.dfs('coringado')
        with self.assertRaises(ArestaInvalidaError):
                self.g_l1.dfs('A')
        with self.assertRaises(ArestaInvalidaError):
                self.g_l2.dfs('B')
        with self.assertRaises(ArestaInvalidaError):
                self.g_l3.dfs('C')
        self.assertEqual(self.grafo_k3.dfs('A'), self.grafo_k3_dfs)
        self.assertEqual(self.grafo_k3.dfs('B'), self.grafo_k3_dfsb)
        self.assertEqual(self.grafo_k3.dfs('C'), self.grafo_k3_dfs)
        self.assertEqual(self.grafo_k4.dfs('A'), self.grafo_k4_dfs)
        self.assertEqual(self.grafo_k4.dfs('B'), self.grafo_k4_dfsb)
        self.assertEqual(self.grafo_k4.dfs('C'), self.grafo_k4_dfsc)
        self.assertEqual(self.grafo_k4.dfs('D'), self.grafo_k4_dfs)
        self.assertEqual(self.grafo_k5.dfs('A'), self.grafo_k5_dfs)
        self.assertEqual(self.grafo_k5.dfs('B'), self.grafo_k5_dfsb)
        self.assertEqual(self.grafo_k5.dfs('C'), self.grafo_k5_dfsc)
        self.assertEqual(self.grafo_k5.dfs('D'), self.grafo_k5_dfsb)
        self.assertEqual(self.grafo_k5.dfs('E'), self.grafo_k5_dfsd)
        self.assertEqual(self.g_p.dfs('J'), self.g_p_dfs)
        self.assertEqual(self.g_p.dfs('C'), self.g_p_dfs)
        self.assertEqual(self.g_p.dfs('P'), self.g_p_dfs)
        self.assertEqual(self.grafo_conexo_p.dfs('K'), self.grafo_conexo_p_dfs)
        self.assertEqual(self.grafo_conexo_p.dfs('COISA'), self.grafo_conexo_p_dfs)
        self.assertEqual(self.grafo_roteiro.dfs('K'), self.grafo_roteiro_dfs)

    def test_bfs(self):
        with self.assertRaises(VerticeInvalidoError):
            self.grafo_k3.bfs('Z')
        with self.assertRaises(VerticeInvalidoError):
                self.grafo_k4.bfs('abluble')
        with self.assertRaises(VerticeInvalidoError):
                self.grafo_k5.bfs('coringado')
        with self.assertRaises(ArestaInvalidaError):
                self.g_l1.bfs('A')
        with self.assertRaises(ArestaInvalidaError):
                self.g_l2.bfs('B')
        with self.assertRaises(ArestaInvalidaError):
                self.g_l3.bfs('C')
        self.assertEqual(self.grafo_k3.bfs('A'), self.grafo_k3_bfs)
        self.assertEqual(self.grafo_k3.bfs('B'), self.grafo_k3_bfsb)
        self.assertEqual(self.grafo_k3.bfs('C'), self.grafo_k3_bfsc)
        self.assertEqual(self.grafo_k4.bfs('A'), self.grafo_k4_bfs)
        self.assertEqual(self.grafo_k4.bfs('B'), self.grafo_k4_bfsb)
        self.assertEqual(self.grafo_k4.bfs('C'), self.grafo_k4_bfsc)
        self.assertEqual(self.grafo_k4.bfs('D'), self.grafo_k4_bfsd)
        self.assertEqual(self.grafo_k5.bfs('A'), self.grafo_k5_bfs)
        self.assertEqual(self.grafo_k5.bfs('B'), self.grafo_k5_bfsb)
        self.assertEqual(self.grafo_k5.bfs('C'), self.grafo_k5_bfsc)
        self.assertEqual(self.grafo_k5.bfs('D'), self.grafo_k5_bfsd)
        self.assertEqual(self.grafo_k5.bfs('E'), self.grafo_k5_bfse)
        self.assertEqual(self.g_p.bfs('J'), self.g_p_bfs)
        self.assertEqual(self.g_p.bfs('C'), self.g_p_bfs)
        self.assertEqual(self.g_p.bfs('P'), self.g_p_bfs)

    def test_prim(self):
        self.assertEqual(self.g_c_pesos.mst_prim(), self.g_c_prim)
        self.assertEqual(self.g_c2_pesos.mst_prim(), self.g_c2_prim)
        self.assertEqual(self.g_l4_pesos.mst_prim(), self.g_l4_prim)
        self.assertEqual(self.g_l5_pesos.mst_prim(), self.g_l5_prim)
        self.assertEqual(self.grafo_k3_pesos.mst_prim(), self.grafo_k3_prim)
        self.assertEqual(self.grafo_k4_pesos.mst_prim(), self.grafo_k4_prim)
        self.assertEqual(self.grafo_k5_pesos.mst_prim(), self.grafo_k5_prim)
        self.assertEqual(self.g2.mst_prim(), self.g2_prim)
        self.assertEqual(self.g3.mst_prim(), self.g3_prim)

    def test_kruskal(self):
        with self.assertRaises(VerticeInvalidoError):
            self.grafo_k3.dfs('Z')
        with self.assertRaises(VerticeInvalidoError):
            self.grafo_k4.dfs('abluble')
        with self.assertRaises(VerticeInvalidoError):
            self.grafo_k5.dfs('coringado')
        self.assertEqual(self.g_p_pesos.mst_kruskal("J"), self.g_p_kruskal)
        self.assertEqual(self.g_p2_pesos.mst_kruskal("C"), self.g_p2_kruskal)
        self.assertEqual(self.g_p3_pesos.mst_kruskal("J"), self.g_p3_kruskal)
        self.assertEqual(self.g_p4_pesos.mst_kruskal("Z"), self.g_p4_kruskal)
        self.assertEqual(self.g_p_sem_paralelas_pesos.mst_kruskal("C"), self.g_p_sem_paralelas_kruskal)
        self.assertEqual(self.g_c_pesos.mst_kruskal("P"), self.g_c_kruskal)
        self.assertEqual(self.g_c2_pesos.mst_kruskal("Maria"), self.g_c2_kruskal)
        self.assertEqual(self.g_c3_pesos.mst_kruskal("Único"), self.g_c3_kruskal)
        self.assertEqual(self.g_l4_pesos.mst_kruskal("D"), self.g_l4_kruskal)
        self.assertEqual(self.g_l5_pesos.mst_kruskal("D"), self.g_l5_kruskal)
        self.assertEqual(self.grafo_k3_pesos.mst_kruskal("B"), self.grafo_k3_kruskal)
        self.assertEqual(self.grafo_k4_pesos.mst_kruskal("D"), self.grafo_k4_kruskal)
        self.assertEqual(self.grafo_k5_pesos.mst_kruskal("A"), self.grafo_k5_kruskal)
        self.assertEqual(self.grafo_conexo_p_pesos.mst_kruskal("COISA"), self.grafo_conexo_p_kruskal)
        self.assertEqual(self.grafo_roteiro_pesos.mst_kruskal("H"), self.grafo_roteiro_kruskal)
        self.assertEqual(self.g2.mst_kruskal("C"), self.g2_kruskal)
        self.assertEqual(self.g3.mst_kruskal("F"), self.g3_kruskal)